/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import contapp_studio.FormatoTabla;
import static contapp_studio.principal.bloqueadas;
import static contapp_studio.principal.jTabbedPane1;
import static contapp_studio.principal.tk;
import controlador.conexion;
import controlador.operaciones;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static vista.inicio.superLocalID;

/**
 *
 * @author jairo
 */
public class abono extends javax.swing.JPanel implements ActionListener{
    Connection con;
    operaciones op;
    conexion cn;
    private int registrado=0;
    public static int pagadoPubli=0;
    private TableRowSorter<TableModel> elQueOrdena;
    
    Calendar hoy = Calendar.getInstance();
    SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
    String presente=formatoPredefinido.format(hoy.getTime()).toString();
    
   
    /**
     * Creates new form factura
     */
    
    @Override
    public void actionPerformed(final ActionEvent e) {
        //tapPe.removeTap(title); --remover este panel
        this.removeAll();
        }
    
    
    public abono() {
        initComponents();
        cn=new conexion();
        op=new operaciones();
        con=cn.AccederBD();
        
        //fecha
        jDateChooser1.getDateEditor().addPropertyChangeListener(new PropertyChangeListener(){ 
        public void propertyChange(PropertyChangeEvent e) {
                separe();
        }

        });
        Calendar hoy = Calendar.getInstance();
        SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
        Date presente = null;
        try {
            presente = formatoPredefinido.parse(formatoPredefinido.format(hoy.getTime()).toString());
        } catch (ParseException ex) {
            System.out.println("Error: "+ex);
        }
        jDateChooser1.setDate(presente);
        //tabla de clientes con separe
        separe();
        //
        actualizar ();
        radioNombre.setSelected(true);
       //agregar escucha de filas seleccionadas a tabla detalle
    ListSelectionModel rowSM = tablaDetalle.getSelectionModel();
    rowSM.addListSelectionListener(new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent e) {
                //Ignore extra messages.
                if (e.getValueIsAdjusting()) return;

                ListSelectionModel lsm =
                    (ListSelectionModel)e.getSource();

                if (lsm.isSelectionEmpty()) {
                    System.out.println("NADA SELECCIONADO");
                } else {
                    int selectedRow = lsm.getMinSelectionIndex();
                    selDetalle();

                }
        }
    });
        //agregar escucha de filas seleccionadas a tabla separe
        ListSelectionModel rowSM1 = tablaSepare.getSelectionModel();
        rowSM1.addListSelectionListener(new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent e) {
                //Ignore extra messages.
                if (e.getValueIsAdjusting()) return;

                ListSelectionModel lsm =
                    (ListSelectionModel)e.getSource();

                if (lsm.isSelectionEmpty()) {
                    System.out.println("NADA SELECCIONADO");
                } else {
                    int selectedRow = lsm.getMinSelectionIndex();
                    selSepare();

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaSepare = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        txtBusqueda = new javax.swing.JFormattedTextField();
        radioNombre = new javax.swing.JRadioButton();
        radioTel = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaDetalle = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtAbono = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRestante = new javax.swing.JFormattedTextField();
        btnEntregar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPagado = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblEstado = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        lblDetalleSepare = new javax.swing.JLabel();
        radioFac = new javax.swing.JRadioButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        chkFecha = new javax.swing.JCheckBox();

        jLabel6.setText("jLabel6");

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMinimumSize(new java.awt.Dimension(713, 426));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        tablaSepare.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID separe", "Nombre", "Apellido", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaSepare.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaSepare.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaSepareMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tablaSepareMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(tablaSepare);
        tablaSepare.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tablaSepare.getColumnModel().getColumnCount() > 0) {
            tablaSepare.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        txtBusqueda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyTyped(evt);
            }
        });

        radioNombre.setText("Nombre");
        radioNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioNombreActionPerformed(evt);
            }
        });

        radioTel.setText("Telefono");
        radioTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTelActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar  por");

        tablaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID ", "Producto", "Cantidad", "Valor unitario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDetalleMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaDetalle);
        tablaDetalle.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tablaDetalle.getColumnModel().getColumnCount() > 0) {
            tablaDetalle.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jLabel2.setText("Abono");

        txtAbono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAbonoActionPerformed(evt);
            }
        });
        txtAbono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAbonoKeyTyped(evt);
            }
        });

        jLabel3.setText("Restante");

        txtRestante.setEditable(false);
        txtRestante.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtRestante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        btnEntregar.setText("Entregar 1 articulo");
        btnEntregar.setEnabled(false);
        btnEntregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntregarActionPerformed(evt);
            }
        });

        jLabel4.setText("Abonado");

        txtPagado.setEditable(false);
        txtPagado.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtPagado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jLabel5.setText("Total");

        txtTotal.setEditable(false);
        txtTotal.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jButton2.setText("Abonar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Buscar");

        jButton1.setText("Eliminar separe");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblEstado.setText("En espera");
        lblEstado.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblEstadoPropertyChange(evt);
            }
        });

        jButton4.setText("Limpiar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        lblDetalleSepare.setText("Detalle de artículos en separe");

        radioFac.setText("# de factura");
        radioFac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFacActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setEnabled(false);

        chkFecha.setSelected(true);
        chkFecha.setText("Todas fechas");
        chkFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDetalleSepare, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAbono, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRestante, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEntregar, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPagado, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(72, 72, 72)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(radioNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioTel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(chkFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(radioFac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(chkFecha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioTel)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioNombre)
                            .addComponent(radioFac))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDetalleSepare))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAbono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRestante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPagado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEntregar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actualizar (){
        
        
        System.out.println("Actualizada");
    }
    private void separe(){
        String fecha=formatoPredefinido.format(jDateChooser1.getDate());
        DefaultTableModel datos;
        Object[][] dtUser = null;
        String[] columNames = {"ID","# Factura","Cliente","Telefono","Abonado","Fecha"};
        if(chkFecha.isSelected()){
            dtUser = op.select("separe NATURAL JOIN factura", "id_separe, id_factura, nombre, telefono, abono, fecha", "id_local=" + superLocalID, con);
        }
        else{
            dtUser = op.select("separe NATURAL JOIN factura", "id_separe, id_factura, nombre, telefono, abono, fecha", "id_local=" + superLocalID+"AND fecha='"+fecha+"'", con);
        }
            
            datos = new DefaultTableModel(dtUser,columNames);                        
            tablaSepare.setModel(datos);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<>(datos);
            tablaSepare.setRowSorter(elQueOrdena);
            if(!txtBusqueda.getText().isEmpty()){
                int tipo=2;
                if(radioTel.isSelected()){
                    tipo=3;
                }
                if(radioNombre.isSelected()){
                    tipo=2;
                }
                if(radioFac.isSelected()){
                    tipo=1;
                }
                elQueOrdena.setRowFilter(RowFilter.regexFilter(txtBusqueda.getText(), tipo));
            }
    }
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed
    private void selSepare(){
        int row = tablaSepare.getSelectedRow();
        String id=tablaSepare.getValueAt(row, 1).toString();
        lblDetalleSepare.setText("Detalle de artículos en separe de: "+tablaSepare.getValueAt(row, 2).toString());
        lblDetalleSepare.setForeground(Color.blue);
        detalle();
        calcular();
        lblEstado.setText("Los productos seleccionados en negro pueden ser entregados");
        lblEstado.setForeground(new java.awt.Color(0,153,51));
        int pesta=jTabbedPane1.getSelectedIndex();
         jTabbedPane1.setTitleAt(pesta, "Abono: "+tablaSepare.getValueAt(row, 2).toString());
        //BLOQUEAR
        if (registrado==0){
            bloqueadas.add(jTabbedPane1.getSelectedComponent());
            registrado=1;
        }            
        //
    }
    
    private void selDetalle(){
        int rowDetalle = tablaDetalle.getSelectedRow();
        int rowSepare = tablaSepare.getSelectedRow();
        //
        int abonado=Integer.parseInt(tablaSepare.getValueAt(rowSepare, 4).toString());
        //int cantidad=Integer.parseInt(tablaDetalle.getValueAt(rowDetalle, 2).toString());
        int vUnitario=Integer.parseInt(tablaDetalle.getValueAt(rowDetalle, 3).toString());
        //
        if(abonado>=(vUnitario)){
            btnEntregar.setEnabled(true);
            lblEstado.setText("Este producto ya se puede entregar");//
            lblEstado.setForeground(new java.awt.Color(0,153,51));;
        }
        else{
            btnEntregar.setEnabled(false);
            lblEstado.setText("Este producto no puede ser entregado todavía");//
            lblEstado.setForeground(Color.red);;
        }
    }
    
    private void txtBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyTyped
        separe();
    }//GEN-LAST:event_txtBusquedaKeyTyped

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        actualizar();
        
    }//GEN-LAST:event_formComponentShown

    private void radioTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTelActionPerformed
        // TODO add your handling code here:
        radioNombre.setSelected(false);
        radioFac.setSelected(false);
    }//GEN-LAST:event_radioTelActionPerformed

    private void radioNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioNombreActionPerformed
        // TODO add your handling code here:
        radioTel.setSelected(false);
        radioFac.setSelected(false);
    }//GEN-LAST:event_radioNombreActionPerformed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaKeyReleased
    
    private void detalle(){
        int row = tablaSepare.getSelectedRow();
        String id=tablaSepare.getValueAt(row, 1).toString();
        String idSepare=tablaSepare.getValueAt(row, 0).toString();
        String nombre=tablaSepare.getValueAt(row, 2).toString();
        try{
            
            //llenar tabla con datos seleccionados
            DefaultTableModel datos;
            Object[][] dtUser;
            String[] columNames = {"ID","Producto","Cantidad","Valor unitario","Detalle"};  
            //dtUser = op.select("(detalle JOIN productos ON (detalle.id_producto = productos.id_producto))", "detalle.id_detalle, productos.nombre, detalle.cantidad, detalle.valor", "detalle.id_factura="+id, con);
            dtUser = op.select("detalle NATURAL JOIN productos ", "id_producto, nombre, cantidad, valor, id_detalle", "detalle.id_factura="+id, con);
            //
            datos = new DefaultTableModel(dtUser,columNames);
            tablaDetalle.setModel(datos);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<>(datos);
            tablaDetalle.setRowSorter(elQueOrdena);
            
            if(dtUser[0][0].toString().equals("")){
                System.out.println("Machetazo para tirar excepción");
            }
        }
        catch(ArrayIndexOutOfBoundsException ex){
            System.out.println("Error: "+ex);
            JOptionPane.showMessageDialog(this, "Separe sin artículos registrados\nSe procederá a eliminar éste registro", "Información", JOptionPane.INFORMATION_MESSAGE);
            eliminarAbono("Elimininación automática: registro Vacío", nombre, presente, Integer.parseInt(idSepare), Integer.parseInt(id));
            lblEstado.setText("Registro vacío eliminado");//
            lblEstado.setForeground(Color.red);
        
        }
        
    }
    private void tablaSepareMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSepareMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tablaSepareMouseClicked
    
    
    private void calcular(){
        try{
        //calcular total, restante y demás
        int totalRow= tablaDetalle.getRowCount();
        int row = tablaSepare.getSelectedRow();
        totalRow-=1;
        int sumatoria1=0;
        for (int i=0;i<=totalRow;i++){
            int sumatoria= Integer.parseInt(tablaDetalle.getValueAt(i,3).toString())*Integer.parseInt(tablaDetalle.getValueAt(i,2).toString());
            sumatoria1+=sumatoria;
        }
        txtTotal.setText(Integer.toString(sumatoria1));
        txtPagado.setText(tablaSepare.getValueAt(row,4).toString());
        String total=txtTotal.getText();
        total=total.replaceAll("\\.", "");
        String pagado=txtPagado.getText();
        pagado=pagado.replaceAll("\\.", "");
        pagadoPubli=Integer.parseInt(pagado);
        tablaDetalle.setDefaultRenderer (Object.class, new FormatoTabla());
        txtRestante.setText(Integer.toString(Integer.parseInt(total)-Integer.parseInt(pagado)));
        txtTotal.requestFocus();
        txtPagado.requestFocus();
        txtRestante.requestFocus();
        txtAbono.requestFocus();
        }
        catch(Exception e){
            System.out.println("Registros vacíos: "+e);
            limpiar();
        }
    }
    private void tablaSepareMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSepareMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaSepareMouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            Calendar hoy = Calendar.getInstance();
            SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
            String presente=formatoPredefinido.format(hoy.getTime()).toString();
            int row = tablaSepare.getSelectedRow();
            String id1=tablaSepare.getValueAt(row, 0).toString();
            String idFac1=tablaSepare.getValueAt(row, 1).toString();
            String name=tablaSepare.getValueAt(row, 2).toString();
            int idSep=Integer.parseInt(id1);
            int idFac=Integer.parseInt(idFac1);
            tk.beep();
            String respuesta=JOptionPane.showInputDialog(this,"¿Desea eliminar el separe de "+name+"?\nSi es así, ingrese el motivo a continuación", "Cancelación por vencimiento", JOptionPane.WARNING_MESSAGE);
            if (respuesta==null){
                lblEstado.setText("Operación cancelada");//
                lblEstado.setForeground(Color.red);;
            }
            else{
                eliminarAbono(respuesta, name, presente, idSep, idFac);
            }    
               
        }
        catch(Exception ex) {
            System.out.println("\nERROR:"+ex);
             JOptionPane.showMessageDialog(this,"Seleccione el separe a cancelar");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void eliminarAbono(String descripcionMovimiento, String nombreAbonado, String fechaMovimiento, int idSepare, int idFactura){
                //agregar reporte
                op.insertar("movimientos", "descripcion, tipo, fecha, id_local", "'"+descripcionMovimiento+"','Cancelación de separe de "+nombreAbonado+"','"+fechaMovimiento+"',"+superLocalID, con);
                //               
                for (int i=0; i<=(tablaDetalle.getRowCount()-1); i++){
                    //obtener existencias actuales
                    Object[][] dtUser;
                    int idProducto=Integer.parseInt(tablaDetalle.getValueAt(i, 0).toString());
                    dtUser = op.select("productos", "existencias", "id_producto=" + idProducto, con);
                    String exis=dtUser[0][0].toString();
                    int actual=Integer.parseInt(exis);
                    int agregar=Integer.parseInt(tablaDetalle.getValueAt(i, 2).toString());
                    int existencias=actual+agregar;
                    //devolver existencias
                    op.modificar("productos", "existencias ="+existencias, "id_producto=" + idProducto, con);
                }
                op.eliminar("separe", "id_separe = "+ idSepare, con);//eliminar separe
                op.eliminar("detalle", "id_factura = "+ idFactura, con);//eliminar detalle
                op.eliminar("factura", "id_factura = "+ idFactura, con);//eliminar factura
                lblEstado.setText("¡Separe de "+nombreAbonado+" cancelado!");//
                lblEstado.setForeground(Color.blue);
                separe();
                limpiar();
    }
    
    private void limpiar(){
        txtBusqueda.setText("");
        separe();
        txtTotal.setText("");
        txtPagado.setText("");
        txtRestante.setText("");
        txtAbono.setText("");
        tablaDetalle.setModel(new DefaultTableModel());
        lblDetalleSepare.setText("Detalle de artículos en separe de:");
        lblDetalleSepare.setForeground(Color.black);
        try{
           bloqueadas.remove(jTabbedPane1.getSelectedComponent()); 
        }catch(Exception e){
            System.out.println("Ventana no se pudo desbloquear: "+e);
        }
        
        registrado=0;
        jTabbedPane1.setTitleAt(jTabbedPane1.getSelectedIndex(), "Abono nuevo");
        btnEntregar.setEnabled(false);
        jDateChooser1.setEnabled(false);
        chkFecha.setSelected(true);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        abonar();
        selDetalle();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void abonar(){
        if (txtAbono.getText().isEmpty()){
            tk.beep();
            JOptionPane.showMessageDialog(this,"Ingrese el valor del abono", "Error", JOptionPane.ERROR_MESSAGE);
            lblEstado.setText("Ingrese el valor del abono");//
            lblEstado.setForeground(Color.red);
        }
        else{
            try{
                Calendar hoy = Calendar.getInstance();
                SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd");
                String presente=formatoPredefinido.format(hoy.getTime()).toString();
                int row = tablaSepare.getSelectedRow();
                int id=Integer.parseInt(tablaSepare.getValueAt(row, 0).toString());
                int actual=Integer.parseInt(tablaSepare.getValueAt(row, 4).toString());
                int agregar=Integer.parseInt(txtAbono.getText());
                int abono=actual+agregar;
                op.modificar("separe", "abono ="+abono, "id_separe=" + id, con);
                op.insertar("movimientos", "descripcion, tipo, valor, fecha, id_local", "'"+tablaSepare.getValueAt(row, 2).toString()+" Paga "+txtAbono.getText()+" De "+txtRestante.getText()+" Restante','Abono agregado',"+abono+",'"+presente+"',"+superLocalID, con); //abono registrado
                tablaSepare.setValueAt(abono, row, 4);
                txtPagado.setText(Integer.toString(abono));
                calcular();
                //actuListaProductos();
                //limpiar();
                lblEstado.setText("Operación registrada correctamente");
                lblEstado.setForeground(Color.blue);
            }
            catch (NumberFormatException e) {
                tk.beep();
                JOptionPane.showMessageDialog(this,"Ingrese sólo valores numéricos", "Error", JOptionPane.ERROR_MESSAGE);
                lblEstado.setText("Ingrese sólo valores numéricos");//
                lblEstado.setForeground(Color.red);
            }
            catch(Exception ex) {
                System.out.println("\n_______________\nERROR:"+ex);
                tk.beep();
                JOptionPane.showMessageDialog(this,"Seleccione el cliente", "Error", JOptionPane.ERROR_MESSAGE);
                lblEstado.setText("Seleccione el cliente");//
                lblEstado.setForeground(Color.red);
            }
        }
    }
    private void lblEstadoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblEstadoPropertyChange
        // TODO add your handling code here:

        /*/lblEstado.setText("En espera");
        lblEstado.setForeground(Color.blue);/*/
    }//GEN-LAST:event_lblEstadoPropertyChange

    private void txtAbonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAbonoActionPerformed
        // TODO add your handling code here:
        abonar();
        txtAbono.setText("");
    }//GEN-LAST:event_txtAbonoActionPerformed

    private void txtAbonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAbonoKeyTyped
        // TODO add your handling code here:
       /*/ char c=evt.getKeyChar();
        if (!Character.isDigit(c)){
            evt.consume();
        }/*/
    }//GEN-LAST:event_txtAbonoKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        limpiar();
        separe();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tablaDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDetalleMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tablaDetalleMouseClicked

    private void btnEntregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntregarActionPerformed
        // TODO add your handling code here:
        int rowDetalle = tablaDetalle.getSelectedRow();
        int rowSepare = tablaSepare.getSelectedRow();
        //
        int cantidad=Integer.parseInt(tablaDetalle.getValueAt(rowDetalle, 2).toString());
        int vUnitario=Integer.parseInt(tablaDetalle.getValueAt(rowDetalle, 3).toString());
        //
        int idSepare=Integer.parseInt(tablaSepare.getValueAt(rowSepare, 0).toString());
        int abonado=Integer.parseInt(tablaSepare.getValueAt(rowSepare, 4).toString());
        int total=abonado-(vUnitario);
        int idDetalle=Integer.parseInt(tablaDetalle.getValueAt(rowDetalle, 4).toString());
        String nombre=tablaDetalle.getValueAt(rowDetalle, 1).toString();
        String persona=tablaSepare.getValueAt(rowSepare, 2).toString();
        int respuesta=JOptionPane.showConfirmDialog(this, "¿Desea entregar "+nombre+" a "+persona+"?", "Entregar producto", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (respuesta == JOptionPane.YES_OPTION) {
            if(cantidad>1){
                op.modificar("detalle", "cantidad="+(cantidad-1), "id_detalle="+idDetalle, con);
                
            }
            else{
                op.eliminar("detalle", "id_detalle="+idDetalle, con);  
            }
            
            op.insertar("movimientos", "descripcion, tipo, fecha, id_local", "'"+persona+" retira un "+nombre+"','Producto entregado','"+presente+"',"+superLocalID, con); //producto entregado: registro
            op.modificar("separe", "abono="+total, "id_separe="+idSepare, con);
            detalle();
            tablaSepare.setValueAt(total, rowSepare, 4);
            calcular();
            lblEstado.setText("Producto "+nombre+" entregado");
            lblEstado.setForeground(Color.blue);
            btnEntregar.setEnabled(false);
        }
    }//GEN-LAST:event_btnEntregarActionPerformed

    private void radioFacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFacActionPerformed
        // TODO add your handling code here:
        radioNombre.setSelected(false);
        radioTel.setSelected(false);
    }//GEN-LAST:event_radioFacActionPerformed

    private void chkFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFechaActionPerformed
        // TODO add your handling code here:
        if (chkFecha.isSelected()){
            jDateChooser1.setEnabled(false);
        }
        else{
            jDateChooser1.setEnabled(true);
        }
    }//GEN-LAST:event_chkFechaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEntregar;
    private javax.swing.JCheckBox chkFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblDetalleSepare;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JRadioButton radioFac;
    private javax.swing.JRadioButton radioNombre;
    private javax.swing.JRadioButton radioTel;
    private javax.swing.JTable tablaDetalle;
    private javax.swing.JTable tablaSepare;
    private javax.swing.JFormattedTextField txtAbono;
    private javax.swing.JFormattedTextField txtBusqueda;
    private javax.swing.JFormattedTextField txtPagado;
    private javax.swing.JFormattedTextField txtRestante;
    private javax.swing.JFormattedTextField txtTotal;
    // End of variables declaration//GEN-END:variables

   
}
