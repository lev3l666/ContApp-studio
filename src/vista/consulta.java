/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import static contapp_studio.principal.bloqueadas;
import static contapp_studio.principal.jTabbedPane1;
import static contapp_studio.principal.tk;
import controlador.conexion;
import controlador.operaciones;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static vista.inicio.superLocalID;


/**
 *
 * @author jairo
 */
public class consulta extends javax.swing.JPanel {
    Connection con;
    operaciones op;
    conexion cn;
    Date presente;
    /**
     * Creates new form consulta
     */
    public consulta() {
        initComponents();
        //
        cn=new conexion();
        op=new operaciones();
        con=cn.AccederBD();
        radioMovGral.setSelected(true);
        radioDescripcion.setSelected(true);
        toogleButDetalle.setVisible(false);
        //
        jDateChooser1.getDateEditor().addPropertyChangeListener(new PropertyChangeListener(){ 
        public void propertyChange(PropertyChangeEvent e) {
                actualizaTabla();
        }

        });
        Calendar hoy = Calendar.getInstance();
        SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
        try {
            presente = formatoPredefinido.parse(formatoPredefinido.format(hoy.getTime()).toString());
        } catch (ParseException ex) {
            System.out.println("Error: "+ex);
        }
        jDateChooser1.setDate(presente);
        
        actualizaTabla();
    }
    
    public void actualizaTabla(){
        SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd");
        String fecha=formatoPredefinido.format(jDateChooser1.getDate());
        if(radioMovGral.isSelected()){
            DefaultTableModel datos;
            Object[][] dtUser;
            String[] columNames = {"ID","Descripcion","Tipo","Valor","Fecha"};
            if(chkTodas.isSelected()){
                dtUser = op.select("movimientos", "id_movimiento, descripcion, tipo, valor, fecha", "id_local=" + superLocalID, con);
            }
            else{
               dtUser = op.select("movimientos", "id_movimiento, descripcion, tipo, valor, fecha", "id_local=" + superLocalID+" AND fecha='"+fecha+"'", con); 
            }            
            datos = new DefaultTableModel(dtUser,columNames);                        
            tabla.setModel(datos);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(datos);
            tabla.setRowSorter(elQueOrdena);
            if(!txtFiltro.getText().isEmpty()){
                int tipo=1;
                if(radioDescripcion.isSelected()){
                    tipo=1;
                }
                if(radioTipo.isSelected()){
                    tipo=2;
                }
                elQueOrdena.setRowFilter(RowFilter.regexFilter(txtFiltro.getText(), tipo));
            }
        }
        if (radioFac.isSelected()){
            DefaultTableModel datos;
            Object[][] dtUser;
            String[] columNames = {"ID","Fecha"};  
            if(chkTodas.isSelected()){
                dtUser = op.select("factura", "id_factura, fecha", "id_local=" + superLocalID, con);

            }else{
                dtUser = op.select("factura", "id_factura, fecha", "id_local=" + superLocalID+" AND fecha='"+fecha+"'", con);
            }
            datos = new DefaultTableModel(dtUser,columNames);                        
            tabla.setModel(datos);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(datos);
            tabla.setRowSorter(elQueOrdena); 
        }
        toogleButDetalle.setSelected(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        radioMovGral = new javax.swing.JRadioButton();
        radioFac = new javax.swing.JRadioButton();
        chkTodas = new javax.swing.JCheckBox();
        toogleButDetalle = new javax.swing.JToggleButton();
        txtFiltro = new javax.swing.JTextField();
        lblBuscar = new javax.swing.JLabel();
        radioDescripcion = new javax.swing.JRadioButton();
        radioTipo = new javax.swing.JRadioButton();
        lblIngreseBusqueda = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        tabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        jLabel1.setText("Fecha");

        radioMovGral.setText("Movimientos");
        radioMovGral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMovGralActionPerformed(evt);
            }
        });

        radioFac.setText("Facturas");
        radioFac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFacActionPerformed(evt);
            }
        });

        chkTodas.setText("Todas");
        chkTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTodasActionPerformed(evt);
            }
        });

        toogleButDetalle.setText("Ver detalle");
        toogleButDetalle.setEnabled(false);
        toogleButDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toogleButDetalleActionPerformed(evt);
            }
        });

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        lblBuscar.setText("Buscar por:");

        radioDescripcion.setText("Descripcion");
        radioDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDescripcionActionPerformed(evt);
            }
        });

        radioTipo.setText("Tipo");
        radioTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTipoActionPerformed(evt);
            }
        });

        lblIngreseBusqueda.setText("Ingrese búsqueda aquí");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(radioMovGral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radioFac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(toogleButDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(radioDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(radioTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFiltro)
                            .addComponent(lblIngreseBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkTodas))
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblIngreseBusqueda)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblBuscar)
                                            .addComponent(radioDescripcion))
                                        .addGap(23, 23, 23))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(toogleButDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(radioTipo))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(chkTodas))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(radioMovGral)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(radioFac)))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioMovGralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMovGralActionPerformed
        // TODO add your handling code here:
        radioFac.setSelected(false);
        txtFiltro.setVisible(true);
        toogleButDetalle.setVisible(false);
        lblBuscar.setVisible(true);
        lblIngreseBusqueda.setVisible(true);
        radioDescripcion.setVisible(true);
        radioTipo.setVisible(true);
        actualizaTabla();
    }//GEN-LAST:event_radioMovGralActionPerformed

    private void radioFacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFacActionPerformed
        // TODO add your handling code here:
        radioMovGral.setSelected(false);
        txtFiltro.setVisible(false);
        toogleButDetalle.setVisible(true);
        lblBuscar.setVisible(false);
        lblIngreseBusqueda.setVisible(false);
        radioDescripcion.setVisible(false);
        radioTipo.setVisible(false);
        actualizaTabla();
        

    }//GEN-LAST:event_radioFacActionPerformed

    private void chkTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTodasActionPerformed
        // TODO add your handling code here:
        actualizaTabla();
        if(jDateChooser1.isEnabled()){
            jDateChooser1.setEnabled(false);
        }
        else{
            jDateChooser1.setEnabled(true);
        }
    }//GEN-LAST:event_chkTodasActionPerformed

    private void toogleButDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toogleButDetalleActionPerformed
        // TODO add your handling code here:
        if(toogleButDetalle.isSelected())
        {   try{
                int row = tabla.getSelectedRow();
                int id=Integer.parseInt(tabla.getValueAt(row, 0).toString());
                DefaultTableModel datos;
                Object[][] dtUser;
                String[] columNames = {"ID","Producto","Cantidad","Valor"};  
                dtUser=op.select("detalle NATURAL JOIN productos","id_detalle, nombre, cantidad, valor", "id_factura="+id, con);
                datos = new DefaultTableModel(dtUser,columNames);                        
                tabla.setModel(datos);
                TableRowSorter<TableModel> Rsorter = new TableRowSorter<>(datos);
                tabla.setRowSorter(Rsorter);
                toogleButDetalle.setText("Volver");
            }catch(Exception ex){
                tk.beep();
                toogleButDetalle.setSelected(false);
                JOptionPane.showMessageDialog(this, "Seleccione la factura que desea visualizar", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
            toogleButDetalle.setText("Ver detalle");
            actualizaTabla();
        }
    }//GEN-LAST:event_toogleButDetalleActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        if(radioFac.isSelected()){
            toogleButDetalle.setEnabled(true);
        }
        else{
            toogleButDetalle.setEnabled(false);
        }
    }//GEN-LAST:event_tablaMouseClicked

    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        // TODO add your handling code here:
     actualizaTabla();
    }//GEN-LAST:event_txtFiltroKeyTyped

    private void radioDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDescripcionActionPerformed
        // TODO add your handling code here:
        radioTipo.setSelected(false);
    }//GEN-LAST:event_radioDescripcionActionPerformed

    private void radioTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTipoActionPerformed
        // TODO add your handling code here:
        radioDescripcion.setSelected(false);
    }//GEN-LAST:event_radioTipoActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        actualizaTabla();
    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Calendar hoy = Calendar.getInstance();
                SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd");
               String presente=formatoPredefinido.format(hoy.getTime()).toString();
        JTextField txtDescripcion = new JTextField(30);
      JTextField txtTipo = new JTextField(20);
      JTextField txtValor = new JTextField(20);

      JPanel myPanel = new JPanel();
      myPanel.add(new JLabel("Descripción:"));
      myPanel.add(txtDescripcion);
      myPanel.add(Box.createHorizontalStrut(15)); // a spacer
      myPanel.add(new JLabel("Tipo:"));
      myPanel.add(txtTipo);
      myPanel.add(Box.createHorizontalStrut(15)); // a spacer
      myPanel.add(new JLabel("Valor:"));
      myPanel.add(txtValor);
      myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.PAGE_AXIS));
      txtTipo.setText("Flujo de caja");
      txtValor.setText("-");
      int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Ingrese los campos solicitados para el ingreso personalizado", JOptionPane.OK_CANCEL_OPTION);
      if (result == JOptionPane.OK_OPTION) {
          if(txtDescripcion.getText().isEmpty()||txtTipo.getText().isEmpty()){
              tk.beep();
              JOptionPane.showMessageDialog(this,"Los campos Descripción y Tipo no pueden estar vacíos", "OPERACIÓN CANCELADA", JOptionPane.ERROR_MESSAGE);
          }
          else
          {
             try{
                 String descripcion=txtDescripcion.getText();
                String tipo=txtTipo.getText();
              
                 if (txtValor.getText().isEmpty()){
                     op.insertar("movimientos", "descripcion, tipo, fecha, id_local", "'"+descripcion+"','"+tipo+"','"+presente+"',"+superLocalID, con);
                 }
                 else{ 
                    int valor=Integer.parseInt(txtValor.getText());
                    op.insertar("movimientos", "descripcion, tipo, valor, fecha, id_local", "'"+descripcion+"','"+tipo+"',"+valor+",'"+presente+"',"+superLocalID, con);
                 }              
                 JOptionPane.showMessageDialog(this,"Registro ingresado correctamente", "Registro exitoso", JOptionPane.INFORMATION_MESSAGE);
            }
            catch(NumberFormatException e) {
                 tk.beep();
                JOptionPane.showMessageDialog(this,"Ingrese sólo valores numéricos en el campo VALOR: "+e, "OPERACIÓN CANCELADA", JOptionPane.ERROR_MESSAGE); 
            }
            catch (Exception e){
                System.out.println(e);
            }
          }
          
      }
      actualizaTabla();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkTodas;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblIngreseBusqueda;
    private javax.swing.JRadioButton radioDescripcion;
    private javax.swing.JRadioButton radioFac;
    private javax.swing.JRadioButton radioMovGral;
    private javax.swing.JRadioButton radioTipo;
    private javax.swing.JTable tabla;
    private javax.swing.JToggleButton toogleButDetalle;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
