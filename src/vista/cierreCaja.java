/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import static contapp_studio.principal.notificaciones;
import controlador.conexion;
import controlador.operaciones;
import java.awt.BorderLayout;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import org.jfree.chart.*;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.*;
import static vista.inicio.superLocalID;
import static contapp_studio.principal.notificaciones;

/**
 *
 * @author jairo
 */
public class cierreCaja extends javax.swing.JPanel {
private JFreeChart chart;
    Connection con;
    operaciones op;
    conexion cn;
    /**
     * Creates new form cierreCaja
     */
    public cierreCaja() {
        initComponents();
        cn=new conexion();
        op=new operaciones();
        con=cn.AccederBD();
        //calendario
        Calendar hoy = Calendar.getInstance();
        SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
        Date presente = null;
        Date pasado = null;
        try {
            presente = formatoPredefinido.parse(formatoPredefinido.format(hoy.getTime()).toString());
            hoy.add(Calendar.DATE, -30);
            pasado = formatoPredefinido.parse(formatoPredefinido.format(hoy.getTime()).toString());
        } catch (ParseException ex) {
            System.out.println("Error: "+ex);
        }
        jDateHasta.setDate(presente);
        jDateDesde.setDate(pasado);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDibujo = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        radioIngresos = new javax.swing.JRadioButton();
        radioVentas = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateDesde = new com.toedter.calendar.JDateChooser();
        jDateHasta = new com.toedter.calendar.JDateChooser();
        radioTorta = new javax.swing.JRadioButton();
        radioBarras = new javax.swing.JRadioButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        javax.swing.GroupLayout panelDibujoLayout = new javax.swing.GroupLayout(panelDibujo);
        panelDibujo.setLayout(panelDibujoLayout);
        panelDibujoLayout.setHorizontalGroup(
            panelDibujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 602, Short.MAX_VALUE)
        );
        panelDibujoLayout.setVerticalGroup(
            panelDibujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("Graficar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar grafico");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        radioIngresos.setSelected(true);
        radioIngresos.setText("Ingresos y gastos");
        radioIngresos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioIngresosActionPerformed(evt);
            }
        });

        radioVentas.setText("Cantidad de ventas");
        radioVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioVentasActionPerformed(evt);
            }
        });

        jLabel1.setText("Desde");

        jLabel2.setText("Hasta");

        jDateDesde.setDateFormatString("yyyy-MM-dd");

        jDateHasta.setDateFormatString("yyyy-MM-dd");

        radioTorta.setText("Torta");
        radioTorta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTortaActionPerformed(evt);
            }
        });

        radioBarras.setSelected(true);
        radioBarras.setText("Barras");
        radioBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBarrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDibujo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioBarras)
                        .addGap(26, 26, 26)
                        .addComponent(radioTorta))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jDateDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioVentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDibujo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioVentas)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioTorta)
                            .addComponent(radioBarras))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 155, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void graficar(){
        
        panelDibujo.repaint();
        SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
        DefaultPieDataset data = new DefaultPieDataset();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        String titulo="";
        String equis="";
        String ye="";
        if(radioVentas.isSelected()){
            titulo="Productos vendidos desde "+formatoPredefinido.format(jDateDesde.getDate()).toString()+" hasta "+formatoPredefinido.format(jDateHasta.getDate()).toString();
            equis="Producto";
            ye="Cantidad";
            try { 
                String dtUser1="SELECT nombre, SUM(cantidad) as total FROM productos JOIN detalle ON productos.id_producto = detalle.id_producto JOIN factura ON detalle.id_factura = factura.id_factura WHERE factura.id_local="+superLocalID+" AND fecha BETWEEN '"+formatoPredefinido.format(jDateDesde.getDate())+"' AND '"+formatoPredefinido.format(jDateHasta.getDate())+"' AND factura.id_factura NOT IN (SELECT id_factura FROM separe) group by productos.nombre";
                ResultSet res = con.prepareStatement(dtUser1).executeQuery();
                while(res.next()){
                    System.out.println(res.getString( "nombre" )+res.getInt("total"));
                    data.setValue( res.getString( "nombre" ) ,res.getInt("total"));
                    dataset.setValue(res.getInt("total"), res.getString( "nombre" ), res.getString( "nombre" ));
                }
                res.close();
                
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
        if(radioIngresos.isSelected()){
            titulo="Ingresos y gastos desde "+formatoPredefinido.format(jDateDesde.getDate()).toString()+" hasta "+formatoPredefinido.format(jDateHasta.getDate()).toString();
            equis="Mes";
            ye="Dinero";
            try { 
                String dtIngresos="SELECT SUM(valor) as total, month(fecha) as mes FROM movimientos WHERE fecha BETWEEN '"+formatoPredefinido.format(jDateDesde.getDate())+"' AND '"+formatoPredefinido.format(jDateHasta.getDate())+"' AND id_local="+superLocalID+" AND valor>=0 group by month(fecha)"; //
                String dtGastos="SELECT SUM(valor) as total, month(fecha) as mes FROM movimientos WHERE fecha BETWEEN '"+formatoPredefinido.format(jDateDesde.getDate())+"' AND '"+formatoPredefinido.format(jDateHasta.getDate())+"' AND id_local="+superLocalID+" AND valor<=0 group by month(fecha)"; //
                String dtFacturas="SELECT SUM(valor*cantidad) as total, month(fecha) as mes FROM detalle NATURAL JOIN factura WHERE fecha BETWEEN '"+formatoPredefinido.format(jDateDesde.getDate())+"' AND '"+formatoPredefinido.format(jDateHasta.getDate())+"' AND id_local="+superLocalID+" AND id_factura NOT IN (SELECT id_factura FROM separe) group by month(fecha)";
                int acumulaGastos=0;
                int acumulaIngresos=0;
                int acumulaBalance=0;
                ResultSet res = con.prepareStatement(dtIngresos).executeQuery();
                ResultSet resg = con.prepareStatement(dtGastos).executeQuery();
                ResultSet resf = con.prepareStatement(dtFacturas).executeQuery();
                while(res.next()&&resg.next()&&resf.next()){
                    acumulaGastos=acumulaGastos+(resg.getInt("total")*-1);
                    acumulaIngresos=acumulaIngresos+res.getInt("total")+resf.getInt("total");
                    acumulaBalance=acumulaBalance+res.getInt("total")+resf.getInt("total")+resg.getInt("total");
                    dataset.setValue(resg.getInt("total")*-1, "Gastos", res.getString( "mes" ));
                    dataset.setValue(res.getInt("total")+resf.getInt("total"), "Ingresos", res.getString( "mes" ));
                    dataset.setValue(res.getInt("total")+resf.getInt("total")+resg.getInt("total"), "Balance", res.getString( "mes" ));
                }
                    data.setValue( "Gastos" ,acumulaGastos);
                    data.setValue( "Ingresos" ,acumulaIngresos);
                    data.setValue( "Balance" ,acumulaBalance);
                res.close();
                
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
        //asignar según tipo de gráfico
        if(radioBarras.isSelected()){
            chart = ChartFactory.createBarChart3D
                (titulo,equis, ye, dataset, PlotOrientation.VERTICAL, true,true, false);
                chart.setBackgroundPaint(Color.white);
                chart.getTitle().setPaint(Color.black); 
                CategoryPlot p = chart.getCategoryPlot(); 
                p.setRangeGridlinePaint(Color.red);
        }
        if(radioTorta.isSelected()){
            chart = ChartFactory.createPieChart(titulo, data, true, true, false);
        }
        //Dibujar
        ChartPanel chartPanel = new ChartPanel(chart);
        panelDibujo.removeAll();
        panelDibujo.revalidate();
        panelDibujo.setLayout(new java.awt.BorderLayout());
        panelDibujo.add(chartPanel,BorderLayout.CENTER);
        panelDibujo.repaint();
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        graficar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    Calendar hoy = Calendar.getInstance();
        SimpleDateFormat formatoPredefinido = new SimpleDateFormat("d' de 'MMMM' de 'yyyy hh-mm-ss a");
        String presente=formatoPredefinido.format(hoy.getTime()).toString();
        //
        SimpleDateFormat formatoMes = new SimpleDateFormat("MMMM' de 'yyyy");
        String mes=formatoMes.format(hoy.getTime()).toString();
        //
     try {
        // TODO add your handling code here:
        File directorioMes=new File(System.getProperty("user.home")+"/Studio Facturador/Graficos/"+(mes)); 
        directorioMes.mkdirs(); 
         System.out.println("Guardado en: "+directorioMes);
        ChartUtilities.saveChartAsJPEG(new File(directorioMes+"/grafico "+presente+".jpg"), chart, panelDibujo.getWidth(), panelDibujo.getHeight());
        } catch (IOException ex) {
            Logger.getLogger(cierreCaja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void radioIngresosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioIngresosActionPerformed
        // TODO add your handling code here:
        radioVentas.setSelected(false);
    }//GEN-LAST:event_radioIngresosActionPerformed

    private void radioVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioVentasActionPerformed
        // TODO add your handling code here:
        radioIngresos.setSelected(false);
    }//GEN-LAST:event_radioVentasActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        graficar();
    }//GEN-LAST:event_formComponentShown

    private void radioBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBarrasActionPerformed
        // TODO add your handling code here:
        radioTorta.setSelected(false);
    }//GEN-LAST:event_radioBarrasActionPerformed

    private void radioTortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTortaActionPerformed
        // TODO add your handling code here:
        radioBarras.setSelected(false);
    }//GEN-LAST:event_radioTortaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateDesde;
    private com.toedter.calendar.JDateChooser jDateHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel panelDibujo;
    private javax.swing.JRadioButton radioBarras;
    private javax.swing.JRadioButton radioIngresos;
    private javax.swing.JRadioButton radioTorta;
    private javax.swing.JRadioButton radioVentas;
    // End of variables declaration//GEN-END:variables
}
