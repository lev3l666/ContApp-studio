/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import static contapp_studio.principal.tk;
import controlador.conexion;
import controlador.operaciones;
import java.awt.Color;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static vista.inicio.superLocalID;

/**
 *
 * @author jairo
 */
public class inventario extends javax.swing.JPanel {
    Connection con;
    operaciones op;
    conexion cn;
    /**
     * Creates new form inventario
     */
    public inventario() {
        initComponents();
        //
        cn=new conexion();
        op=new operaciones();
        con=cn.AccederBD();
        //
        actuListaProductos();
    }
    
    private void actuListaProductos(){
        DefaultTableModel datos;
        Object[][] dtUser;
        String[] columNames = {"ID","Nombre","Valor","Existencias"};  
            dtUser = op.select("productos", "id_producto, nombre, valor, existencias", "id_local=" + superLocalID, con);
            datos = new DefaultTableModel(dtUser,columNames);                        
            jTable1.setModel(datos);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(datos);
            jTable1.setRowSorter(elQueOrdena);

    }

    private void limpiar(){
        jSpinner1.setValue(0);
        txtDescripcion.setText("");
        jTextField1.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblExistencias = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        lblValor = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        lblEstado = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        lblExistencias.setText("Agregar existencias");

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        lblValor.setText("Por valor de:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Existencias");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        txtDescripcion.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripci√≥n"));
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtDescripcion);

        lblEstado.setText("En espera");
        lblEstado.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblEstadoPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExistencias)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblValor))
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().isEmpty()||txtDescripcion.getText().isEmpty()){
            tk.beep();
            JOptionPane.showMessageDialog(this,"Ingrese el valor y la descripci√≥n de la operaci√≥n ", "Error", JOptionPane.ERROR_MESSAGE);
            lblEstado.setText("Ingrese el valor y la descripci√≥n de la operaci√≥n ");//
            lblEstado.setForeground(Color.red);
        }
        else{
            try{
                Calendar hoy = Calendar.getInstance();
                SimpleDateFormat formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd");
                String presente=formatoPredefinido.format(hoy.getTime()).toString();
                int row = jTable1.getSelectedRow();
                int id=Integer.parseInt(jTable1.getValueAt(row, 0).toString());
                int actual=Integer.parseInt(jTable1.getValueAt(row, 3).toString());
                int agregar=(Integer) jSpinner1.getValue();
                int existencias=actual+agregar;
                int cantidad=(Integer) jSpinner1.getValue();
                op.modificar("productos", "existencias ="+existencias, "id_producto=" + id, con);
                if (cantidad<0){
                    op.insertar("movimientos", "descripcion, tipo, valor, fecha, id_local", "'"+txtDescripcion.getText()+"','Existencias retiradas',"+Integer.parseInt(jTextField1.getText())+",'"+presente+"',"+superLocalID, con); //productos retirados
                }
                else{
                    op.insertar("movimientos", "descripcion, tipo, valor, fecha, id_local", "'"+txtDescripcion.getText()+"','Existencias agregadas',"+Integer.parseInt(jTextField1.getText())+",'"+presente+"',"+superLocalID, con);//productos agregados
                }
                actuListaProductos();
                limpiar();
                lblEstado.setText("Operaci√≥n registrada correctamente");
                lblEstado.setForeground(Color.blue);
            }
            catch(Exception ex) {
                System.out.println("\n_______________\nERROR:"+ex);
                tk.beep();
                JOptionPane.showMessageDialog(this,"Seleccione el producto", "Error", JOptionPane.ERROR_MESSAGE);
                lblEstado.setText("Seleccione el producto");//
                lblEstado.setForeground(Color.red);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        int valor=(Integer) jSpinner1.getValue();
        if (valor<0){
           lblExistencias.setText("Retirar existencias");
           lblExistencias.setForeground(new java.awt.Color(255,51,51));
           jTextField1.setText("");
        }
        else
        {
            lblExistencias.setText("Agregar existencias");
            lblExistencias.setForeground(new java.awt.Color(0,51,255));
            jTextField1.setText("-");
        }
        
    }//GEN-LAST:event_jSpinner1StateChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        actuListaProductos();
    }//GEN-LAST:event_formComponentShown

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        try{
            //ERROR si se agregan existencias y el texto de valor es positivo
            if ((Integer)jSpinner1.getValue()>=0&&Integer.parseInt(jTextField1.getText())>0){
                evt.consume();
                System.out.println("Caracter invalido");
                lblEstado.setText("ERROR: ingrese valores negativos en el campo valor para agregar existencias");
                lblEstado.setForeground(Color.red);
            }
            //ERROR si se retiran existencias y el texto de valor es negativo
            if ((Integer)jSpinner1.getValue()<0&&Integer.parseInt(jTextField1.getText())<0){
                evt.consume();
                System.out.println("Caracter invalido");
                lblEstado.setText("ERROR: ingrese valores positivos en el campo valor para retirar existencias");
                lblEstado.setForeground(Color.red);
            }
            //si se agregan existencias y el texto de valor es cero o negativo
            if ((Integer)jSpinner1.getValue()>=0&&Integer.parseInt(jTextField1.getText())<=0){
                lblEstado.setText("En espera");
                lblEstado.setForeground(Color.blue);
            }
            //si se retiran existencias y el texto de valor es positivo o cero
            if ((Integer)jSpinner1.getValue()<0&&Integer.parseInt(jTextField1.getText())>=0){
                lblEstado.setText("En espera");
                lblEstado.setForeground(Color.blue);
            }
        }
        catch(Exception ex){
            System.out.println("Error: "+ex);
            /*/lblEstado.setText("ERROR: ingrese s√≥lo valores num√©ricos");
            lblEstado.setForeground(Color.red);/*/
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void lblEstadoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblEstadoPropertyChange
        // TODO add your handling code here:

        /*/lblEstado.setText("En espera");
        lblEstado.setForeground(Color.blue);/*/
    }//GEN-LAST:event_lblEstadoPropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        limpiar();
        
        lblEstado.setText("Operaci√≥n cancelada");
        lblEstado.setForeground(Color.red);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:
        if (txtDescripcion.getText().length()>=255){
            evt.consume();
            lblEstado.setText("Cantidad m√°xima alcanzada, no debe superar los 255 car√°cteres");
            lblEstado.setForeground(Color.red);
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblExistencias;
    private javax.swing.JLabel lblValor;
    private javax.swing.JTextArea txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
