/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import static contapp_studio.principal.tk;
import controlador.conexion;
import controlador.operaciones;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static vista.inicio.superLocal;
import static vista.inicio.superLocalID;

/**
 *
 * @author jairo
 */
public class nomina extends javax.swing.JPanel implements Printable{
    Connection con;
    operaciones op;
    conexion cn;
    Calendar hoy;
    SimpleDateFormat formatoPredefinido;
    String presente;

    /**
     * Creates new form nomina
     */
    public nomina() {
        initComponents();
        lblLista.setText("Lista empleados - " + superLocal);
        cn=new conexion();
        op=new operaciones();
        con=cn.AccederBD();
        actuListaEmpleados();
        btnCancelar.setVisible(false);
        btnRegistraImprime.setVisible(false);
        hoy = Calendar.getInstance();
        formatoPredefinido = new SimpleDateFormat("yyyy-MM-dd"); //("d/MM/yyyy hh:mm a");
        presente=formatoPredefinido.format(hoy.getTime()).toString();
    }
    
    private void actuListaEmpleados(){
        DefaultTableModel datosuser;
        Object[][] dtUser;
        String[] columNames = {"ID","Nombre","Deuda","Ãšltimo pago"};  
            dtUser = op.select("empleados", "id_empleado, nombre, deuda, fechaUltimoPago", "id_local=" + superLocalID, con);
            datosuser = new DefaultTableModel(dtUser,columNames);                        
            table1.setModel(datosuser);
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(datosuser);
            table1.setRowSorter(elQueOrdena);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRealizaPago = new javax.swing.JButton();
        lblLista = new javax.swing.JLabel();
        btnModificaDeuda = new javax.swing.JButton();
        btnRegistraImprime = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblEstado = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();

        btnRealizaPago.setText("Realizar pago");
        btnRealizaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizaPagoActionPerformed(evt);
            }
        });

        lblLista.setText("Lista empleados");

        btnModificaDeuda.setText("Modificar deuda");
        btnModificaDeuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificaDeudaActionPerformed(evt);
            }
        });

        btnRegistraImprime.setText("Registrar e imprimir");
        btnRegistraImprime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistraImprimeActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblEstado.setText("En espera");
        lblEstado.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblEstadoPropertyChange(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLista, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                                .addGap(28, 28, 28))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRegistraImprime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModificaDeuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRealizaPago, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRealizaPago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificaDeuda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRegistraImprime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRealizaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizaPagoActionPerformed
        // TODO add your handling code here:
        try{
                int row = table1.getSelectedRow();
                int id=Integer.parseInt(table1.getValueAt(row, 0).toString());
                int deuda=0;
                try{
                    deuda=Integer.parseInt(table1.getValueAt(row, 2).toString());
                }catch(Exception ex){
                    System.out.println("Error: "+ex);
                    deuda=0;
                }
                Object datosQ[][];
                datosQ=op.select("config", "basico, transporte", null, con);
                int basico=Integer.parseInt(datosQ[0][0].toString());
                int transporte=Integer.parseInt(datosQ[0][1].toString());
                int total=(basico+transporte)-deuda;
                DefaultTableModel datosuser;
                String nombreEmpleado=table1.getValueAt(row, 1).toString();
                 //datos de la matriz
                 Object[][] data = {
                    {nombreEmpleado, id},
                    {"Deuda", deuda},
                    {"Auxilio de transporte", transporte},
                    {"Salario bÃ¡sico", basico},
                    {"---------------------", "-----------"},
                    {"Total", total},
                    {"---------------------", "-----------"},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""},
                    {"", ""}
                    };
                //nueva tabla
                String[] columNames = {"Nombre","Valores"};
                datosuser = new DefaultTableModel(data,columNames);  
                table1.setModel(datosuser);
                TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(datosuser);
                table1.setRowSorter(elQueOrdena); 
                 
                lblLista.setText("Pago a "+nombreEmpleado+" de "+presente);
                btnRealizaPago.setVisible(false);
                btnModificaDeuda.setVisible(false);
                btnRegistraImprime.setVisible(true);
                btnCancelar.setVisible(true);
       
            }
            catch(Exception ex) {
                System.out.println("\n_______________\nERROR:"+ex);
                tk.beep();
                JOptionPane.showMessageDialog(this,"Seleccione el empleado", "Error", JOptionPane.ERROR_MESSAGE);
                lblEstado.setText("Seleccione el empleado");//
                lblEstado.setForeground(Color.red);
            }
    }//GEN-LAST:event_btnRealizaPagoActionPerformed

    private void lblEstadoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblEstadoPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_lblEstadoPropertyChange
    private void limpiar(){
        btnRealizaPago.setVisible(true);
        btnModificaDeuda.setVisible(true);
        btnRegistraImprime.setVisible(false);
        btnCancelar.setVisible(false);
        actuListaEmpleados();
        lblLista.setText("Lista empleados - " + superLocal);
    }
    private void btnRegistraImprimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistraImprimeActionPerformed
        // TODO add your handling code here:
        Color frameOrig=this.getBackground();
        //Color tablaOrig=table1.getBackground();
        int response =JOptionPane.showConfirmDialog(this, "Â¿Desea registrar e imprimir la operaciÃ³n actual?", "Registrar e imprimir", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
           try {
               lblEstado.setVisible(false);
               btnRegistraImprime.setVisible(false);
               btnCancelar.setVisible(false);
               this.setBackground(Color.white);
               //table1.setBackground(Color.white);
                PrinterJob job = PrinterJob.getPrinterJob();
                job.setPrintable(this);
                job.printDialog();
                job.print();
                int id=Integer.parseInt(table1.getValueAt(0, 1).toString());
                int total=Integer.parseInt(table1.getValueAt(5, 1).toString());
                String nombreEmpleado=table1.getValueAt(0, 0).toString();
                op.modificar("empleados", "fechaUltimoPago ='"+presente+"', deuda="+0, "id_empleado=" + id, con);
                op.insertar("movimientos", "descripcion, tipo, valor, fecha, id_local", "'Pago realizado a "+nombreEmpleado+"','Pago nÃ³mina',"+(-total)+",'"+presente+"',"+superLocalID, con); //productos retirados
                tk.beep();
                JOptionPane.showMessageDialog(this,"Factura de "+nombreEmpleado+" Correctamente generada y registrada", "OperaciÃ³n satisfactoria", JOptionPane.INFORMATION_MESSAGE);
                limpiar();
                this.setBackground(frameOrig);
                //table1.setBackground(tablaOrig);
                lblEstado.setVisible(true);
                lblEstado.setText("Factura de "+nombreEmpleado+" Correctamente generada y registrada");//
                lblEstado.setForeground(Color.blue);
            } catch (PrinterException ex) { System.out.println("Error: "+ex);
                JOptionPane.showMessageDialog(this,"ImpresiÃ³n abortada y no ha sido registrada", "OperaciÃ³n abortada", JOptionPane.ERROR_MESSAGE);
                this.setBackground(frameOrig);
                limpiar();
            }catch (Exception ex){System.out.println("Error: "+ex);
                JOptionPane.showMessageDialog(this,"Error: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                this.setBackground(frameOrig);
                limpiar();
            } 
        }
         
        
    }//GEN-LAST:event_btnRegistraImprimeActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table1MouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificaDeudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificaDeudaActionPerformed
        // TODO add your handling code here:
        try{
                int row = table1.getSelectedRow();
                int id=Integer.parseInt(table1.getValueAt(row, 0).toString());
                String respuesta=JOptionPane.showInputDialog(this, "Ingrese la deuda que presenta Ã©ste empleado");
                if (!respuesta.isEmpty()){
                    int aux=Integer.parseInt(respuesta);
                    op.modificar("empleados", "deuda="+aux, "id_empleado="+id, con);
                    actuListaEmpleados();
                    lblEstado.setText("Deuda editada correctamente");//
                    lblEstado.setForeground(Color.blue); 
                }
                else{
                   lblEstado.setText("Â¡ERROR: Campo vacÃ­o!");//
                    lblEstado.setForeground(Color.red); 
                }
        }
        catch(IndexOutOfBoundsException ex){
                System.out.println("\n_______________\nERROR:"+ex);
                tk.beep();
                JOptionPane.showMessageDialog(this,"Seleccione el empleado", "Error", JOptionPane.ERROR_MESSAGE);
                lblEstado.setText("Seleccione el empleado");//
                lblEstado.setForeground(Color.red);
        }
        catch(NullPointerException ex){
            lblEstado.setText("OperaciÃ³n cancelada");//
            lblEstado.setForeground(Color.red);
        }
        catch(NumberFormatException ex){
            lblEstado.setText("Â¡ERROR! Ingrese sÃ³lo valores numÃ©ricos");//
            lblEstado.setForeground(Color.red);
        }
    }//GEN-LAST:event_btnModificaDeudaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnModificaDeuda;
    private javax.swing.JButton btnRealizaPago;
    private javax.swing.JButton btnRegistraImprime;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblLista;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        if (pageIndex > 0) return NO_SUCH_PAGE;
        Graphics2D g2d = (Graphics2D)graphics;
        //Punto donde empezarÃ¡ a imprimir dentro la pagina (100, 50)
        g2d.translate(  pageFormat.getImageableX()+100, 
                        pageFormat.getImageableY()+50);
        g2d.scale(0.50,0.50); //ReducciÃ³n de la impresiÃ³n al 50%
        this.printAll(graphics);
        return PAGE_EXISTS;                
    }
}
